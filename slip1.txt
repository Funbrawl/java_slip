1. Write a Java program to display all the alphabets between ‘A’ to ‘Z’ after every 2
seconds. [15 M]

import java.util.concurrent.TimeUnit;

public class AlphabetDisplay {
    public static void main(String[] args) {
        char start = 'A';
        char end = 'Z';

        for (char c = start; c <= end; c++) {
            System.out.print(c + " ");
            try {
                TimeUnit.SECONDS.sleep(2);  // Delay for 2 seconds
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}


2. Write a Java program to accept the details of Employee (Eno, EName, Designation,
Salary) from a user and store it into the database. (Use Swing) [15 M]

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

public class EmployeeDetailsForm extends JFrame {
    private JLabel lblEno, lblEName, lblDesignation, lblSalary;
    private JTextField txtEno, txtEName, txtDesignation, txtSalary;
    private JButton btnSave;

    public EmployeeDetailsForm() {
        // Set up the GUI components
        lblEno = new JLabel("Employee No:");
        lblEName = new JLabel("Employee Name:");
        lblDesignation = new JLabel("Designation:");
        lblSalary = new JLabel("Salary:");

        txtEno = new JTextField(10);
        txtEName = new JTextField(10);
        txtDesignation = new JTextField(10);
        txtSalary = new JTextField(10);

        btnSave = new JButton("Save");

        setLayout(new GridLayout(5, 2));
        add(lblEno);
        add(txtEno);
        add(lblEName);
        add(txtEName);
        add(lblDesignation);
        add(txtDesignation);
        add(lblSalary);
        add(txtSalary);
        add(new JLabel());
        add(btnSave);

        setTitle("Employee Details Form");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        pack();
        setLocationRelativeTo(null);

        // Add ActionListener to the Save button
        btnSave.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                saveEmployeeDetails();
            }
        });
    }

    private void saveEmployeeDetails() {
        // Retrieve the values entered by the user
        int eno = Integer.parseInt(txtEno.getText());
        String eName = txtEName.getText();
        String designation = txtDesignation.getText();
        double salary = Double.parseDouble(txtSalary.getText());

        // Insert the employee details into the database
        try {
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/your_database", "username", "password");
            String sql = "INSERT INTO employees (eno, ename, designation, salary) VALUES (?, ?, ?, ?)";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setInt(1, eno);
            statement.setString(2, eName);
            statement.setString(3, designation);
            statement.setDouble(4, salary);
            statement.executeUpdate();

            JOptionPane.showMessageDialog(this, "Employee details saved successfully.");
            clearFields();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error saving employee details: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void clearFields() {
        txtEno.setText("");
        txtEName.setText("");
        txtDesignation.setText("");
        txtSalary.setText("");
    }

   public static void main(String[] args) {
    SwingUtilities.invokeLater(new Runnable() {
        @Override
        public void run() {
            new EmployeeDetailsForm().setVisible(true);
        }
    });
}