1. Write a Java program to display information about the database and list all the tables in
the database. (Use DatabaseMetaData). [15 M]

import java.sql.*;
class setA2
{
   public static void main(String args[])
   {
      ResultSet rs=null;
      Connection con=null;
      try
      {
         con=DriverManager.getConnection("jdbc:postgresql://192.168.1.254/ty23","ty23","ty23");
         DatabaseMetaData dbmd=con.getMetaData();
         System.out.println("Database product name="+dbmd.getDatabaseProductName());
         System.out.println("User name="+dbmd.getUserName());
         System.out.println("Database driver name="+dbmd.getDriverName());
         System.out.println("Database driver version="+dbmd.getDriverVersion());
         System.out.println("Database version="+dbmd.getDriverMajorVersion());
         rs=dbmd.getTables(null,null,null,new String[]{"TABLE"});
         System.out.println("List of tables...");
         while(rs.next())
         {
            String tblName=rs.getString("TABLE_NAME");
            System.out.println("Table:"+tblName);
         }
         rs.close();
         con.close();
         
      }
      catch(SQLException e)
      {
         System.out.println("Error"+e.getMessage());
      }
   }
}


~/JAVA2/Assignment3$ javac setA2.java
~/JAVA2/Assignment3$ java -cp .:/data/jdbc/psql.jar setA2
Database product name=PostgreSQL
User name=ty70
Database driver name=PostgreSQL JDBC Driver
Database driver version=42.5.4
Database version=42
List of tables...
Table:donor
Table:project

2. Write a Java program to show lifecycle (creation, sleep, and dead) of a thread. Program
should print randomly the name of thread and value of sleep time. The name of the
thread should be hard coded through constructor. The sleep time of a thread will be a
random integer in the range 0 to 4999. [15 M]

import java.util.Random;

public class ThreadLifecycleExample extends Thread {
    private String threadName;

    public ThreadLifecycleExample(String threadName) {
        this.threadName = threadName;
    }

    @Override
    public void run() {
        Random random = new Random();

        System.out.println("Thread " + threadName + " created.");

        try {
            int sleepTime = random.nextInt(5000);
            System.out.println("Thread " + threadName + " sleeping for " + sleepTime + " milliseconds.");
            Thread.sleep(sleepTime);
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("Thread " + threadName + " dead.");
    }

    public static void main(String[] args) {
        ThreadLifecycleExample thread1 = new ThreadLifecycleExample("Thread 1");
        ThreadLifecycleExample thread2 = new ThreadLifecycleExample("Thread 2");

        thread1.start();
        thread2.start();
    }
}

