1. Write a Menu Driven program in Java for the following: Assume Employee table with
attributes (ENo, EName, Salary) is already created. 1. Insert 2. Update 3. Display 4.
Exit. [15 M]

import java.util.Scanner;
import java.sql.*;

public class EmployeeManagementSystem {
    public static void main(String[] args) {
        try {
            // Establish database connection
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/your_database", "your_username", "your_password");
            
            // Create Employee table if not exists
            createEmployeeTable(connection);

            // Create a Scanner object for user input
            Scanner scanner = new Scanner(System.in);

            int choice;
            do {
                // Display menu options
                System.out.println("Employee Management System");
                System.out.println("1. Insert Employee");
                System.out.println("2. Update Employee");
                System.out.println("3. Display Employees");
                System.out.println("4. Exit");
                System.out.print("Enter your choice: ");
                choice = scanner.nextInt();

                switch (choice) {
                    case 1:
                        insertEmployee(connection, scanner);
                        break;
                    case 2:
                        updateEmployee(connection, scanner);
                        break;
                    case 3:
                        displayEmployees(connection);
                        break;
                    case 4:
                        System.out.println("Exiting...");
                        break;
                    default:
                        System.out.println("Invalid choice. Please try again.");
                }
            } while (choice != 4);

            // Close the database connection and scanner
            connection.close();
            scanner.close();
        } catch (SQLException e) {
            System.out.println("An error occurred: " + e.getMessage());
        }
    }

    private static void createEmployeeTable(Connection connection) throws SQLException {
        String query = "CREATE TABLE IF NOT EXISTS Employee (ENo INT PRIMARY KEY, EName VARCHAR(50), Salary DOUBLE)";
        Statement statement = connection.createStatement();
        statement.executeUpdate(query);
        statement.close();
    }

    private static void insertEmployee(Connection connection, Scanner scanner) throws SQLException {
        System.out.print("Enter Employee Number: ");
        int eno = scanner.nextInt();
        scanner.nextLine(); // Consume newline character
        
        System.out.print("Enter Employee Name: ");
        String ename = scanner.nextLine();
        
        System.out.print("Enter Salary: ");
        double salary = scanner.nextDouble();

        String query = "INSERT INTO Employee (ENo, EName, Salary) VALUES (?, ?, ?)";
        PreparedStatement preparedStatement = connection.prepareStatement(query);
        preparedStatement.setInt(1, eno);
        preparedStatement.setString(2, ename);
        preparedStatement.setDouble(3, salary);
        preparedStatement.executeUpdate();
        preparedStatement.close();

        System.out.println("Employee inserted successfully.");
    }

    private static void updateEmployee(Connection connection, Scanner scanner) throws SQLException {
        System.out.print("Enter Employee Number: ");
        int eno = scanner.nextInt();
        scanner.nextLine(); // Consume newline character
        
        System.out.print("Enter new Employee Name: ");
        String ename = scanner.nextLine();
        
        System.out.print("Enter new Salary: ");
        double salary = scanner.nextDouble();

        String query = "UPDATE Employee SET EName = ?, Salary = ? WHERE ENo = ?";
        PreparedStatement preparedStatement = connection.prepareStatement(query);
        preparedStatement.setString(1, ename);
        preparedStatement.setDouble(2, salary);
        preparedStatement.setInt(3, eno);
        int rowsUpdated = preparedStatement.executeUpdate();
        preparedStatement.close();

        if (rowsUpdated > 0) {
            System.out.println("Employee updated successfully.");
        } else {
            System.out.println("No employee found with the given Employee Number.");
        }
    }

    private static void displayEmployees(Connection connection) throws SQLException {
        String query = "SELECT * FROM Employee";
        Statement statement = connection.createStatement();
        ResultSet resultSet = statement.executeQuery(query);
       
	     System.out.println("Employee Details:");
    System.out.println("===================================");

    while (resultSet.next()) {
        int eno = resultSet.getInt("ENo");
        String ename = resultSet.getString("EName");
        double salary = resultSet.getDouble("Salary");

        System.out.println("Employee Number: " + eno);
        System.out.println("Employee Name: " + ename);
        System.out.println("Salary: " + salary);
        System.out.println("-----------------------------------");
    }

    resultSet.close();
    statement.close();
}
       




2. Write a JSP program which accepts UserName in a TextBox and greets the user
according to the time on server machine. [15 M]

<!DOCTYPE html>
<html>
<head>
    <title>Greeting Program</title>
</head>
<body>
    <h2>Greeting Program</h2>

    <form action="greeting.jsp" method="post">
        <label for="username">Enter your name:</label>
        <input type="text" id="username" name="username">
        <input type="submit" value="Submit">
    </form>

    <%-- Get the current time on the server --%>
    <% java.util.Date currentDate = new java.util.Date(); %>

    <%-- Extract the hour from the current time --%>
    <% int hour = currentDate.getHours(); %>

    <%-- Retrieve the username from the request parameter --%>
    <% String username = request.getParameter("username"); %>

    <%-- Greet the user based on the time --%>
    <% if (username != null && !username.isEmpty()) { %>
        <% if (hour < 12) { %>
            <h3>Good Morning, <%= username %>!</h3>
        <% } else if (hour < 18) { %>
            <h3>Good Afternoon, <%= username %>!</h3>
        <% } else { %>
            <h3>Good Evening, <%= username %>!</h3>
        <% } %>
    <% } %>
</body>
</html>
