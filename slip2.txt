1. Write a java program to read ‘N’ names of your friends, store it into HashSet and
display them in ascending order. [15 M]

import java.util.*;

public class FriendNames {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of friends: ");
        int n = scanner.nextInt();
        scanner.nextLine(); // Consume the newline character
        
        Set<String> friendNames = new HashSet<>();

        for (int i = 1; i <= n; i++) {
            System.out.print("Enter the name of friend " + i + ": ");
            String name = scanner.nextLine();
            friendNames.add(name);
        }

        List<String> sortedNames = new ArrayList<>(friendNames);
        Collections.sort(sortedNames);

        System.out.println("\nFriend names in ascending order:");
        for (String name : sortedNames) {
            System.out.println(name);
        }
    }
}


2. Design a servlet that provides information about a HTTP request from a client, such as
IP-Address and browser type. The servlet also provides information about the server on
which the servlet is running, such as the operating system type, and the names of
currently loaded servlets.
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Enumeration;
import java.util.Map;

public class RequestInfoServlet extends HttpServlet {
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Retrieve client's IP address
        String ipAddress = request.getRemoteAddr();

        // Retrieve browser type
        String userAgent = request.getHeader("User-Agent");

        // Retrieve server information
        String osName = System.getProperty("os.name");

        // Retrieve names of currently loaded servlets
        Map<String, ? extends ServletRegistration> servletRegistrations = getServletContext().getServletRegistrations();
        StringBuilder loadedServlets = new StringBuilder();
        for (ServletRegistration registration : servletRegistrations.values()) {
            loadedServlets.append(registration.getName()).append(", ");
        }
        if (loadedServlets.length() > 0) {
            loadedServlets.delete(loadedServlets.length() - 2, loadedServlets.length()); // Remove trailing comma and space
        }

        // Create HTML response string
        String htmlResponse = "<html><body>" +
                "<h2>Request Information:</h2>" +
                "<p>IP Address: " + ipAddress + "</p>" +
                "<p>Browser Type: " + userAgent + "</p>" +
                "<h2>Server Information:</h2>" +
                "<p>Operating System: " + osName + "</p>" +
                "<h2>Loaded Servlets:</h2>" +
                "<p>" + loadedServlets.toString() + "</p>" +
                "</body></html>";

        // Set response content type and character encoding
        response.setContentType("text/html");
        response.setCharacterEncoding("UTF-8");

        // Write the HTML response string to the PrintWriter
        PrintWriter writer = response.getWriter();
        writer.println(htmlResponse);
    }
}


