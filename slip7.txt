1. Write a java program that implements a multi-thread application that has three threads.
First thread generates random integer number after every one second, if the number is
even; second thread computes the square of that number and print it. If the number is
odd, the third thread computes the of cube of that number and print it. [15 M]
import java.util.*;
class firstthread extends Thread
{
   Random r=new Random();
   public int n;
   
   public void run()
   {
      try
      {
         n=r.nextInt(10);
         for(int i=0;i<1;i++)
         {
            
            System.out.println("Generated Random number:"+n);
            if(n%2==0)
            {
               secondthread t2=new secondthread(n);
               t2.start();
            }
            else
            {
               thirdthread t3=new thirdthread(n);
               t3.start();
            }
            sleep(100);
         }
      }
      catch(Exception e)
      {
         e.getStackTrace();
      }
   }
}
class secondthread extends Thread
{
   int square;
   secondthread(int n)
   {
      square=n*n;
   }
   public void run()
   {
      try
      {
         System.out.println("square :"+square);
      }
      catch(Exception e)
      {
            e.getStackTrace();
      }
   }
}
class thirdthread extends Thread
{
   int cube;
   thirdthread(int n)
   {
      cube=n*n;
   }
   public void run()
   {
      try
      {
         System.out.println("cube:"+cube);
      }
      catch(Exception e)
      {
            e.getStackTrace();
      }
   }
}
public class B3
{
   public static void main(String args[])
   {
      firstthread t1=new firstthread();
      t1.start();
   }
}


2. Write a java program for the following:
i. To create a Product(Pid, Pname, Price) table.
ii. Insert at least five records into the table.
iii. Display all the records from a table. [15 M]


import java.sql.*;

public class ProductTableExample {
    public static void main(String[] args) {
        // Database connection details
        String url = "jdbc:postgresql://192.168.1.254/ty23";
        String username = "ty23";
        String password = "ty23";

        // Create a Connection object
        try (Connection connection = DriverManager.getConnection(url, username, password)) {
            // Create a Product table
            createProductTable(connection);

            // Insert records into the Product table
            insertRecords(connection);

            // Display all records from the Product table
            displayRecords(connection);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private static void createProductTable(Connection connection) throws SQLException {
        String createTableQuery = "CREATE TABLE Product (Pid INT PRIMARY KEY, Pname VARCHAR(255), Price DOUBLE PRECISION)";
        try (Statement statement = connection.createStatement()) {
            statement.executeUpdate(createTableQuery);
            System.out.println("Product table created successfully.");
        }
    }

    private static void insertRecords(Connection connection) throws SQLException {
        String insertQuery = "INSERT INTO Product (Pid, Pname, Price) VALUES (?, ?, ?)";

        try (PreparedStatement preparedStatement = connection.prepareStatement(insertQuery)) {
            // Inserting 5 records into the Product table
            preparedStatement.setInt(1, 1);
            preparedStatement.setString(2, "Product 1");
            preparedStatement.setDouble(3, 10.99);
            preparedStatement.executeUpdate();

            preparedStatement.setInt(1, 2);
            preparedStatement.setString(2, "Product 2");
            preparedStatement.setDouble(3, 15.99);
            preparedStatement.executeUpdate();

            preparedStatement.setInt(1, 3);
            preparedStatement.setString(2, "Product 3");
            preparedStatement.setDouble(3, 19.99);
            preparedStatement.executeUpdate();

            preparedStatement.setInt(1, 4);
            preparedStatement.setString(2, "Product 4");
            preparedStatement.setDouble(3, 25.99);
            preparedStatement.executeUpdate();

            preparedStatement.setInt(1, 5);
            preparedStatement.setString(2, "Product 5");
            preparedStatement.setDouble(3, 12.99);
            preparedStatement.executeUpdate();

            System.out.println("Records inserted successfully.");
        }
    }

    private static void displayRecords(Connection connection) throws SQLException {
        String selectQuery = "SELECT * FROM Product";
        try (Statement statement = connection.createStatement();
             ResultSet resultSet = statement.executeQuery(selectQuery)) {
            System.out.println("Product table records:");

            while (resultSet.next()) {
                int pid = resultSet.getInt("Pid");
                String pname = resultSet.getString("Pname");
                double price = resultSet.getDouble("Price");

                System.out.println("Pid: " + pid + ", Pname: " + pname + ", Price: " + price);
            }
        }
    }
}
